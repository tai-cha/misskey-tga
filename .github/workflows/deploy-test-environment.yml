######################################################################
# joinmisskey/misskey-tga(https://github.com/joinmisskey/misskey-tga)
# v0.4.3
######################################################################

name: Deploy test environment

on:
  #以下のコメントアウトを外すことで、このワークフローが保存されているブランチにpushがあった際に自動で実行します(このワークフローが保存されているリポジトリとブランチが使用されます)
  #push:
  #このワークフローを別のワークフローから呼び出すことができます。inputsのrepository/branch_or_hashが渡されなかった場合、呼び出し元のワークフローが保存されているリポジトリ/ブランチが使用されます。
  workflow_call:
    inputs:
      repository:
        description: 'Repository to deploy (optional, use the repository where this workflow is stored by default)'
        type: string
        required: false
      branch_or_hash:
        description: 'Branch or Commit hash to deploy　(optional, use the branch where this workflow is stored by default)'
        type: string
        required: false
      wait_time:
        description: 'Time to wait in seconds (optional, 1800 seconds by default)'
        type: string
        required: false
    secrets:
      DISCORD_WEBHOOK_URL:
        required: true
  #github.comのリポジトリのActionsタブやAPIなどを使用して、ワークフローを実行することができます。inputsのrepository/branch_or_hashが渡されなかった場合、このワークフローが保存されているリポジトリ/ブランチが使用されます。
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository to deploy (optional, use the repository where this workflow is stored by default)'
        type: string
        required: false
      branch_or_hash:
        description: 'Branch or Commit hash to deploy　(optional, use the branch where this workflow is stored by default)'
        type: string
        required: false
      wait_time:
        description: 'Time to wait in seconds (optional, 1800 seconds by default)'
        type: string
        required: false

jobs:
  deploy-test-environment:
    runs-on: ubuntu-latest
    steps:
    - name: Set environment variable (for tput command & pnpm)
      run: |
        echo "TERM=xterm" >> $GITHUB_ENV
        REPOSITORY=${{ inputs.repository || github.repository }}
        echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV
        BRANCH_OR_HASH=${{ inputs.branch_or_hash || github.ref_name }}
        echo "BRANCH_OR_HASH=$BRANCH_OR_HASH" >> $GITHUB_ENV
        WAIT_TIME=${{ inputs.wait_time || '1800' }}
        echo "WAIT_TIME=$WAIT_TIME" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ${{ env.REPOSITORY }}
        ref: ${{ env.BRANCH_OR_HASH }}

    - name: Get the latest commit SHA
      run: |
        SHA=$(git log -1 --format="%H")
        echo "SHA=$SHA" >> $GITHUB_ENV

    - name: Start cloudflare tunnel (quick)
      run: |
        wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
        sudo dpkg -i cloudflared-linux-amd64.deb
        sudo cloudflared tunnel --metrics localhost:55555 --url localhost:3000 > /dev/null 2>&1 &
        sleep 15
        TUNNEL_RESPONSE=$(curl http://localhost:55555/quicktunnel)
        TUNNEL_DOMAIN=$(echo $TUNNEL_RESPONSE | grep -o '"hostname":"[^"]*' | grep -o '[^"]*$')
        echo "::add-mask::$TUNNEL_DOMAIN"
        echo "TUNNEL_DOMAIN=$TUNNEL_DOMAIN" >> $GITHUB_ENV

    - name: Prepare Corepack latest
      run: |
        npm install -g corepack@latest
        corepack enable && corepack prepare pnpm@latest

    - name: Install misskey
      run: |
        wget https://raw.githubusercontent.com/joinmisskey/bash-install/v4/misskey-install.sh
        wget https://raw.githubusercontent.com/joinmisskey/bash-install/v4/testenv_githubactions.txt
        sed -i "s/host=127.0.0.1/host=$TUNNEL_DOMAIN/g" testenv_githubactions.txt
        sed -i "s|git_repository=https://github.com/misskey-dev/misskey|git_repository=https://github.com/$REPOSITORY|g" testenv_githubactions.txt
        sed -i "s|git_branch=master|git_branch=$BRANCH_OR_HASH|g" testenv_githubactions.txt
        sudo chmod 555 ./misskey-install.sh
        sudo bash -x ./misskey-install.sh -c ./testenv_githubactions.txt

    - name: Post tunnel info to Discord
      run: |
        CURRENT_TIME=$(TZ=Asia/Tokyo date +'%Y-%m-%d %H:%M:%S JST')
        COMMIT_URL="https://github.com/$REPOSITORY/commit/$SHA"
        curl -X POST -H "Content-Type: application/json" -d "{\"content\": \"==============================\nURL: https://$TUNNEL_DOMAIN\nRepository: $REPOSITORY\nBranch or Commit hash: $BRANCH_OR_HASH\nCommit: $COMMIT_URL\nTime: $CURRENT_TIME\n==============================\"}" ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Wait
      run: |
        timeout $WAIT_TIME tail -f /var/log/syslog || true
